# Template to produce a new WaiverDB build job in OpenShift.
#
# WaiverDB build job is a part of the WaiverDB C3I Pipeline, covering the following steps:
#
# - Run Flake8 and Pylint checks
# - Run unit tests
# - Build Docs
# - Publish Docs
# - Build SRPM
# - Build RPM
# - Invoke Rpmlint
# - Build container
# - Run functional tests
# - Push container
#
# Required Jenkins Plugins:
# - Openshift Sync plugin
# - Openshift Client plugin
# - Kubernetes plugin
# - SSH Agent plugin
# - Timestamper plugin
#
---
apiVersion: v1
kind: Template
metadata:
  name: waiverdb-build-pipeline
parameters:
- name: NAME
  displayName: Short unique identifier for the templated instances
  description: This field is used to deploy multiple pipelines to one OpenShift project from this template.
  required: true
  value: waiverdb-build
- name: WAIVERDB_GIT_REPO
  displayName: WaiverDB Git repo URL
  description: Default WaiverDB Git repo URL in which to run dev tests against
  required: true
  value: "https://pagure.io/waiverdb.git"
- name: WAIVERDB_GIT_REF
  displayName: WaiverDB Git repo ref
  description: Default WaiverDB Git repo ref in which to run dev tests against
  required: true
  value: master
- name: WAIVERDB_MAIN_BRANCH
  displayName: Name of the main branch.
  description: If WAIVERDB_MAIN_BRANCH equals WAIVERDB_GIT_REF, this is a post-merge build, otherwise it's a pre-merge build.
  value: master
  required: true
- name: JENKINS_AGENT_CLOUD_NAME
  displayName: Name of OpenShift cloud in Jenkins master configuration
  required: true
  value: openshift
- name: JENKINS_AGENT_IMAGE
  displayName: Container image for Jenkins slave pods
  required: true
  value: docker-registry.upshift.redhat.com/factory2/waiverdb-jenkins-slave:latest
- name: PAGURE_DOC_REPO_NAME
  displayName: namespace/project of Pagure doc repo for publishing docs
  description: If not emptry, docs will be published to the specified Pagure doc repo when this is a post-merge build
  required: false
  value: waiverdb
- name: PAGURE_DOC_SECRET
  displayName: Name of the OpenShift SSH secret for publishing docs to Pagure.
  required: false
  value: pagure-doc-secret
- name: WAIVERDB_DEV_IMAGE_DESTINATIONS
  displayName: Comma seperated list of container repositories (without tag) to which the built WaiverDB dev image will be pushed
  description: OpenShift registries must be prefixed with 'atomic:'
  required: false
  value: "quay.io/factory2/waiverdb"
- name: CONTAINER_REGISTRY_CREDENTIALS
  displayName: Secret name of container registries used for pulling and pushing images
  value: factory2-pipeline-registry-credentials
  required: false
- name: WAIVERDB_DEV_IMAGE_TAG
  displayName: Tag name of the resulting container image for development environment
  value: "latest"
  required: true
- name: WAIVERDB_IMAGESTREAM_NAME
  displayName: Name of ImageStream for WaiverDB container images
  required: true
  value: waiverdb
- name: WAIVERDB_IMAGESTREAM_NAMESPACE
  displayName: Namespace of ImageStream for WaiverDB container images
  required: false
- name: WAIVERDB_INTEGRATION_TEST_BUILD_CONFIG_NAME
  displayName: Name of BuildConfig for running integration tests
  required: true
  value: waiverdb-dev-integration-test
- name: WAIVERDB_INTEGRATION_TEST_BUILD_CONFIG_NAMESPACE
  displayName: Namespace of BuildConfig for running integration tests
  required: false
- name: FORCE_PUBLISH_IMAGE
  displayName: Whether to push the resulting image regardless of the Git branch
  value: "false"
  required: true
- name: FORCE_PUBLISH_DOCS
  displayName: Whether to publish docs regardless of the Git branch
  value: "false"
  required: true
- name: TAG_INTO_IMAGESTREAM
  displayName: Whether to tag the pushed image as dev
  value: "true"
  required: true
- name: PAGURE_URL
  displayName: Pagure URL
  value: https://pagure.io
- name: PAGURE_REPO_NAME
  value: waiverdb
- name: PAGURE_REPO_IS_FORK
  value: 'false'
- name: PAGURE_API_KEY_SECRET_NAME
  displayName: Name of Pagure API key secret for updating Pagure pull-request statuses
  value: 'pagure-api-key'
- name: MAIL_ADDRESS
  displayName: If set, build failure messages to this mail address.
labels:
  template: waiverdb-build
objects:
- kind: "BuildConfig"
  apiVersion: "v1"
  metadata:
    name: "${NAME}-jenkins-slave"
    labels:
      app: "${NAME}"
  spec:
    runPolicy: "Serial"
    completionDeadlineSeconds: 1800
    strategy:
      dockerStrategy:
        buildArgs:
        - name: CA_URLS
          value: https://password.corp.redhat.com/RH-IT-Root-CA.crt
        forcePull: true
        dockerfilePath: openshift/containers/jenkins-slave/Dockerfile
    resources:
      requests:
        memory: "512Mi"
        cpu: "300m"
      limits:
       memory: "768Mi"
       cpu: "500m"
    source:
      git:
        uri: "${WAIVERDB_GIT_REPO}"
        ref: "${WAIVERDB_GIT_REF}"
    output:
      to:
        kind: "DockerImage"
        name: "${JENKINS_AGENT_IMAGE}"
      pushSecret:
       name: "${CONTAINER_REGISTRY_CREDENTIALS}"

- kind: ServiceAccount
  apiVersion: v1
  metadata:
    name: "${NAME}-jenkins-slave"
    labels:
      app: "${NAME}"

- kind: RoleBinding
  apiVersion: v1
  metadata:
    name: "${NAME}-jenkins-slave_edit"
    labels:
      app: "${NAME}"
  subjects:
  - kind: ServiceAccount
    name: "${NAME}-jenkins-slave"
  roleRef:
    name: edit

- kind: "BuildConfig"
  apiVersion: "v1"
  metadata:
    name: "${NAME}"
    labels:
      app: "${NAME}"
  spec:
    runPolicy: "Serial"
    completionDeadlineSeconds: 1800
    source:
      git:
        uri: "${WAIVERDB_GIT_REPO}"
        ref: "${WAIVERDB_MAIN_BRANCH}"
    strategy:
      type: JenkinsPipeline
      jenkinsPipelineStrategy:
        env:
        - name: "WAIVERDB_GIT_REPO"
          value: "${WAIVERDB_GIT_REPO}"
        - name: "WAIVERDB_GIT_REF"
          value: "${WAIVERDB_GIT_REF}"
        - name: "JENKINS_AGENT_CLOUD_NAME"
          value: "${JENKINS_AGENT_CLOUD_NAME}"
        - name: "JENKINS_AGENT_IMAGE"
          value:  "${JENKINS_AGENT_IMAGE}"
        - name: "JENKINS_AGENT_SERVICE_ACCOUNT"
          value:  "${NAME}-jenkins-slave"
        - name: "WAIVERDB_DEV_IMAGE_DESTINATIONS"
          value: "${WAIVERDB_DEV_IMAGE_DESTINATIONS}"
        - name: "CONTAINER_REGISTRY_CREDENTIALS"
          value: "${CONTAINER_REGISTRY_CREDENTIALS}"
        - name: "FORCE_PUBLISH_IMAGE"
          value: "${FORCE_PUBLISH_IMAGE}"
        - name: "TAG_INTO_IMAGESTREAM"
          value: "${TAG_INTO_IMAGESTREAM}"
        - name: "WAIVERDB_DEV_IMAGE_TAG"
          value: "${WAIVERDB_DEV_IMAGE_TAG}"
        - name: "WAIVERDB_IMAGESTREAM_NAME"
          value: "${WAIVERDB_IMAGESTREAM_NAME}"
        - name: "WAIVERDB_IMAGESTREAM_NAMESPACE"
          value: "${WAIVERDB_IMAGESTREAM_NAMESPACE}"
        - name: "FORCE_PUBLISH_DOCS"
          value: "${FORCE_PUBLISH_DOCS}"
        - name: "PAGURE_DOC_REPO_NAME"
          value: "${PAGURE_DOC_REPO_NAME}"
        - name: "PAGURE_DOC_SECRET"
          value: "${PAGURE_DOC_SECRET}"
        - name: "WAIVERDB_MAIN_BRANCH"
          value: "${WAIVERDB_MAIN_BRANCH}"
        - name: "WAIVERDB_INTEGRATION_TEST_BUILD_CONFIG_NAME"
          value: "${WAIVERDB_INTEGRATION_TEST_BUILD_CONFIG_NAME}"
        - name: "WAIVERDB_INTEGRATION_TEST_BUILD_CONFIG_NAMESPACE"
          value: "${WAIVERDB_INTEGRATION_TEST_BUILD_CONFIG_NAMESPACE}"
        - name: PAGURE_REPO_NAME
          value: "${PAGURE_REPO_NAME}"
        - name: PAGURE_REPO_IS_FORK
          value: "${PAGURE_REPO_IS_FORK}"
        - name: PAGURE_URL
          value: "${PAGURE_URL}"
        - name: PAGURE_API_KEY_SECRET_NAME
          value: "${PAGURE_API_KEY_SECRET_NAME}"
        - name: MAIL_ADDRESS
          value: "${MAIL_ADDRESS}"
        jenkinsfilePath: openshift/pipelines/templates/waiverdb-build.Jenkinsfile
